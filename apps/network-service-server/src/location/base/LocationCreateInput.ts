/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  IsOptional,
  ValidateNested,
  IsString,
  IsEnum,
  IsDate,
} from "class-validator";
import { ComplaintCreateNestedManyWithoutLocationsInput } from "./ComplaintCreateNestedManyWithoutLocationsInput";
import { Type } from "class-transformer";
import { EnumLocationStatus } from "./EnumLocationStatus";

@InputType()
class LocationCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  bandwidth?: number | null;

  @ApiProperty({
    required: false,
    type: () => ComplaintCreateNestedManyWithoutLocationsInput,
  })
  @ValidateNested()
  @Type(() => ComplaintCreateNestedManyWithoutLocationsInput)
  @IsOptional()
  @Field(() => ComplaintCreateNestedManyWithoutLocationsInput, {
    nullable: true,
  })
  complaints?: ComplaintCreateNestedManyWithoutLocationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  registeredEmail?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  routerIp?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumLocationStatus,
  })
  @IsEnum(EnumLocationStatus)
  @IsOptional()
  @Field(() => EnumLocationStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  statusSince?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  wanIp?: string | null;
}

export { LocationCreateInput as LocationCreateInput };
